-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.


++CREATE TABLE IF NOT EXISTS EMPLOYER
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    fio varchar NOT NULL,
    inn varchar(10) NOT NULL UNIQUE,
    birthday date NOT NULL CHECK ((CURRENT_DATE - birthday)/365>=18),
    sex char(1) NOT NULL CHECK (sex = 'м' OR sex = 'ж'),
    call_number varchar(12) NOT NULL UNIQUE CHECK(call_number LIKE '\+7[0-9]{10}'),
    login varchar NOT NULL UNIQUE,
    password varchar NOT NULL CHECK(LENGTH(password)>=8),
    passport varchar(10) UNIQUE CHECK(call_number LIKE '[0-9]{10}'),
    PRIMARY KEY (id)
);

++CREATE TABLE IF NOT EXISTS BUYER
(
    id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    category boolean NOT NULL,
    manager integer NOT NULL,
pricelist integer NOT NULL REFERENCES PRICELIST(id),
    PRIMARY KEY (id),
	FOREIGN KEY (manager) REFERENCES EMPLOYER (id)
);

++CREATE TABLE IF NOT EXISTS INDIVIDUAL
(
    id integer NOT NULL,
    surname varchar NOT NULL,
    name varchar NOT NULL,
    second_name varchar,
    birthday date NOT NULL CHECK ((CURRENT_DATE - birthday)/365>=18),
    adress varchar NOT NULL,
    passport varchar(10) UNIQUE CHECK(call_number LIKE '[0-9]{10}'),
	sex char(1) NOT NULL CHECK (sex = 'м' OR sex = 'ж'),
    call_number varchar(12) NOT NULL UNIQUE CHECK(call_number LIKE '\+7[0-9]{10}'),
    PRIMARY KEY (id),
	FOREIGN KEY (id) REFERENCES BUYER (id)
);

++CREATE TABLE IF NOT EXISTS ENTITY
(
    id integer NOT NULL,
    name varchar NOT NULL,
    legal_adress varchar NOT NULL,
    call_number varchar(12) NOT NULL UNIQUE CHECK(call_number LIKE '\+7[0-9]{10}'),
    requisites varchar NOT NULL UNIQUE,
    kategory varchar NOT NULL,
    license varchar NOT NULL,
	FOREIGN KEY (id) REFERENCES BUYER (id),
    PRIMARY KEY (id)
);

++CREATE TABLE IF NOT EXISTS PRICELIST
(
    id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    director integer NOT NULL,
    date date NOT NULL CHECK (date<=current_date),
    previous integer,
    name varchar NOT NULL,
    PRIMARY KEY (id),
	FOREIGN KEY (director) REFERENCES EMPLOYER(id),
	FOREIGN KEY (previous) REFERENCES PRICELIST(id)
);

++CREATE TABLE IF NOT EXISTS CONSIGNMENT
(
    id integer GENERATED BY DEFAULT AS IDENTITY,
    pricelist_category integer NOT NULL,
    merchandiser integer,
    manager integer NOT NULL,
    buyer integer NOT NULL,
    discharge_date date NOT NULL CHECK (discharge_date<=current_date),
    pay_date date CHECK (pay_date>=discharge_date AND pay_date<=current_date),
    get_date date CHECK (get_date>=get_date AND get_date<=current_date),
    PRIMARY KEY (id),
	FOREIGN KEY (pricelist_category) REFERENCES PRICELIST(id),
	FOREIGN KEY (merchandiser) REFERENCES EMPLOYER(id),
	FOREIGN KEY (manager) REFERENCES EMPLOYER(id),
	FOREIGN KEY (buyer) REFERENCES BUYER(id)
);

++CREATE TABLE IF NOT EXISTS PRODUCT
(
    articul numeric NOT NULL,
    merchandiser integer NOT NULL,
    name varchar NOT NULL UNIQUE,
    certificate varchar NOT NULL,
    package varchar NOT NULL,
    manufacturer varchar NOT NULL,
    count integer NOT NULL CHECK (COUNT>=0),
    PRIMARY KEY (articul),
	FOREIGN KEY (merchandiser) REFERENCES EMPLOYER(id)
);

++CREATE TABLE IF NOT EXISTS PRODUCT_TABLE
(
    consignment integer NOT NULL,
    product integer NOT NULL,
    count integer NOT NULL CHECK (COUNT>=0),
	price integer,
	FOREIGN KEY (consignment) REFERENCES CONSIGNMENT(id),
	FOREIGN KEY (product) REFERENCES PRODUCT(articul),
    PRIMARY KEY (consignment, product)
);

CREATE TABLE IF NOT EXISTS DOCUMENT
(
    id integer GENERATED BY DEFAULT AS IDENTITY,
    cassir integer NOT NULL,
    consignment integer NOT NULL,
    type varchar NOT NULL,
    pay_date date NOT NULL CHECK (pay_date<=current_date),
    PRIMARY KEY (id),
	FOREIGN KEY (cassir) REFERENCES EMPLOYER(id),
	FOREIGN KEY (consignment) REFERENCES CONSIGNMENT(id)
);

CREATE TABLE IF NOT EXISTS POSITION
(
    code integer NOT NULL,
    name varchar NOT NULL,
    PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS EMPLOYER_TABLE
(
    employer integer NOT NULL,
    position integer NOT NULL,
	FOREIGN KEY (employer) REFERENCES EMPLOYER(id),
	FOREIGN KEY (position) REFERENCES POSITION(code),
    PRIMARY KEY (employer, position)
);

+CREATE TABLE IF NOT EXISTS PRODUCT_IN_PRICELIST
(
    product integer NOT NULL,
    pricelist integer NOT NULL,
    price integer CHECK(price>=0),
	FOREIGN KEY (product) REFERENCES PRODUCT(articul),
	FOREIGN KEY (pricelist) REFERENCES PRICELIST(id),
    PRIMARY KEY (product, pricelist)
);
